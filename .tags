!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/44a0e979/
COL	matriz/ex3.c	/^#define COL /;"	d	file:
LIN	matriz/ex3.c	/^#define LIN /;"	d	file:
acima_do_peso	arquivos/ex1/ex1.c	/^float acima_do_peso(float peso, float altura) {$/;"	f	typeref:typename:float
algarismos	funções/ex3.c	/^int algarismos(long int n) {$/;"	f	typeref:typename:int
cria_matriz_chave	trabalho/Trabalho.c	/^int **cria_matriz_chave() {$/;"	f	typeref:typename:int **
cria_matriz_vazia	trabalho/Trabalho.c	/^int **cria_matriz_vazia(int tam) {$/;"	f	typeref:typename:int **
fatorial	funções/ex2.c	/^int fatorial(int n) {$/;"	f	typeref:typename:int
imprime_jogo	trabalho/Trabalho.c	/^void imprime_jogo(int tam, int matriz[tam][tam]) {$/;"	f	typeref:typename:void
imprime_matriz	matriz/ex4.c	/^int imprime_matriz(int lin, int col, int matriz[lin][col]) {$/;"	f	typeref:typename:int
imprime_vetor	lista/quest2.c	/^void imprime_vetor(int tam, int vet[tam]) {$/;"	f	typeref:typename:void
main	arquivos/ex1/ex1.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	arquivos/ex2/ex2.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	arquivos/ex5/ex5.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	funções/ex1.c	/^int main() {$/;"	f	typeref:typename:int
main	funções/ex2.c	/^int main() {$/;"	f	typeref:typename:int
main	funções/ex3.c	/^int main() {$/;"	f	typeref:typename:int
main	funções/ex4.c	/^int main() {$/;"	f	typeref:typename:int
main	lista/quest1.c	/^int main(int argc, char const *argv[]) {$/;"	f	typeref:typename:int
main	lista/quest2.c	/^int main(int argc, char const *argv[]) {$/;"	f	typeref:typename:int
main	matriz/ex1.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	matriz/ex2.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	matriz/ex3.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	matriz/ex4.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	matriz/ex5.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	ponteiro/ex1.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	ponteiro/ex2.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	ponteiro/ex3.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	trabalho/Trabalho.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
main	trabalho/trab.c	/^int main(int argc, char const* argv[])$/;"	f	typeref:typename:int
pbc	README.md	/^# pbc$/;"	c
positivos	matriz/ex2.c	/^int positivos(int lin, int col, int matriz[lin][col]) {$/;"	f	typeref:typename:int
primo	funções/ex1.c	/^int primo(int n) {$/;"	f	typeref:typename:int
primo	funções/ex4.c	/^int primo(int n) {$/;"	f	typeref:typename:int
print_vet	lista/quest1.c	/^void print_vet(int n, int vetor[n]) {$/;"	f	typeref:typename:void
repetido	lista/quest1.c	/^int repetido(int valor, int tam, int vetor[tam]) {$/;"	f	typeref:typename:int
soma_diag	matriz/ex5.c	/^int soma_diag(int lin, int col, int matriz[lin][col]) {$/;"	f	typeref:typename:int
troca	ponteiro/ex1.c	/^void troca(int *a, int *b) {$/;"	f	typeref:typename:void
verifica	ponteiro/ex3.c	/^void verifica(int N, int v[N], int *min, int *max) {$/;"	f	typeref:typename:void
